// Code generated by 'yaegi extract github.com/opennox/libs/script'. DO NOT EDIT.

package imports

import (
	"image"
	"reflect"
	"time"

	"github.com/opennox/libs/object"
	"github.com/opennox/libs/script"
	"github.com/opennox/libs/spell"
	"github.com/opennox/libs/types"
	"github.com/opennox/noxscript/ns/v4"
)

func init() {
	Symbols["github.com/opennox/libs/script/script"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ChangeGold":         reflect.ValueOf(script.ChangeGold),
		"EventMapEntry":      reflect.ValueOf(script.EventMapEntry),
		"EventMapExit":       reflect.ValueOf(script.EventMapExit),
		"EventMapInitialize": reflect.ValueOf(script.EventMapInitialize),
		"EventMapShutdown":   reflect.ValueOf(script.EventMapShutdown),
		"EventPlayerDeath":   reflect.ValueOf(script.EventPlayerDeath),
		"Frames":             reflect.ValueOf(script.Frames),
		"GetGame":            reflect.ValueOf(script.GetGame),
		"HasItem":            reflect.ValueOf(script.HasItem),
		"HitMeleePos":        reflect.ValueOf(script.HitMeleePos),
		"HitRangedPos":       reflect.ValueOf(script.HitRangedPos),
		"IsAllUnits":         reflect.ValueOf(script.IsAllUnits),
		"LookAtPos":          reflect.ValueOf(script.LookAtPos),
		"MoveToPos":          reflect.ValueOf(script.MoveToPos),
		"NewObjectGroup":     reflect.ValueOf(script.NewObjectGroup),
		"NewTimers":          reflect.ValueOf(script.NewTimers),
		"NewUnitGroup":       reflect.ValueOf(script.NewUnitGroup),
		"NewWallGroup":       reflect.ValueOf(script.NewWallGroup),
		"NewWaypointGroup":   reflect.ValueOf(script.NewWaypointGroup),
		"PushToPos":          reflect.ValueOf(script.PushToPos),
		"RegisterVM":         reflect.ValueOf(script.RegisterVM),
		"Runtime":            reflect.ValueOf(script.Runtime),
		"SetPos":             reflect.ValueOf(script.SetPos),
		"SetRuntime":         reflect.ValueOf(script.SetRuntime),
		"Time":               reflect.ValueOf(script.Time),
		"Toggle":             reflect.ValueOf(script.Toggle),
		"ToggleLock":         reflect.ValueOf(script.ToggleLock),
		"VMRuntimes":         reflect.ValueOf(script.VMRuntimes),
		"WalkToPos":          reflect.ValueOf(script.WalkToPos),
		"WithGame":           reflect.ValueOf(script.WithGame),

		// type definitions
		"BaseGame":       reflect.ValueOf((*script.BaseGame)(nil)),
		"BaseObject":     reflect.ValueOf((*script.BaseObject)(nil)),
		"BasePlayer":     reflect.ValueOf((*script.BasePlayer)(nil)),
		"BaseWall":       reflect.ValueOf((*script.BaseWall)(nil)),
		"BaseWaypoint":   reflect.ValueOf((*script.BaseWaypoint)(nil)),
		"Breakable":      reflect.ValueOf((*script.Breakable)(nil)),
		"Chatty":         reflect.ValueOf((*script.Chatty)(nil)),
		"Deleter":        reflect.ValueOf((*script.Deleter)(nil)),
		"Destroyable":    reflect.ValueOf((*script.Destroyable)(nil)),
		"Duration":       reflect.ValueOf((*script.Duration)(nil)),
		"EnableSetter":   reflect.ValueOf((*script.EnableSetter)(nil)),
		"Enabler":        reflect.ValueOf((*script.Enabler)(nil)),
		"EventType":      reflect.ValueOf((*script.EventType)(nil)),
		"Game":           reflect.ValueOf((*script.Game)(nil)),
		"GridPositioner": reflect.ValueOf((*script.GridPositioner)(nil)),
		"Identifiable":   reflect.ValueOf((*script.Identifiable)(nil)),
		"Inventory":      reflect.ValueOf((*script.Inventory)(nil)),
		"Item":           reflect.ValueOf((*script.Item)(nil)),
		"ItemType":       reflect.ValueOf((*script.ItemType)(nil)),
		"Living":         reflect.ValueOf((*script.Living)(nil)),
		"Lockable":       reflect.ValueOf((*script.Lockable)(nil)),
		"LockableObject": reflect.ValueOf((*script.LockableObject)(nil)),
		"Mobile":         reflect.ValueOf((*script.Mobile)(nil)),
		"Named":          reflect.ValueOf((*script.Named)(nil)),
		"Object":         reflect.ValueOf((*script.Object)(nil)),
		"ObjectGroup":    reflect.ValueOf((*script.ObjectGroup)(nil)),
		"ObjectType":     reflect.ValueOf((*script.ObjectType)(nil)),
		"ObjectWrapper":  reflect.ValueOf((*script.ObjectWrapper)(nil)),
		"Offensive":      reflect.ValueOf((*script.Offensive)(nil)),
		"OffensiveGroup": reflect.ValueOf((*script.OffensiveGroup)(nil)),
		"Ownable":        reflect.ValueOf((*script.Ownable)(nil)),
		"Owned":          reflect.ValueOf((*script.Owned)(nil)),
		"OwnerSetter":    reflect.ValueOf((*script.OwnerSetter)(nil)),
		"Physical":       reflect.ValueOf((*script.Physical)(nil)),
		"Player":         reflect.ValueOf((*script.Player)(nil)),
		"PositionSetter": reflect.ValueOf((*script.PositionSetter)(nil)),
		"Positionable":   reflect.ValueOf((*script.Positionable)(nil)),
		"Positioner":     reflect.ValueOf((*script.Positioner)(nil)),
		"Printer":        reflect.ValueOf((*script.Printer)(nil)),
		"Pushable":       reflect.ValueOf((*script.Pushable)(nil)),
		"Raisable":       reflect.ValueOf((*script.Raisable)(nil)),
		"TimeSource":     reflect.ValueOf((*script.TimeSource)(nil)),
		"Timer":          reflect.ValueOf((*script.Timer)(nil)),
		"Timers":         reflect.ValueOf((*script.Timers)(nil)),
		"Toggler":        reflect.ValueOf((*script.Toggler)(nil)),
		"Trigger":        reflect.ValueOf((*script.Trigger)(nil)),
		"Unit":           reflect.ValueOf((*script.Unit)(nil)),
		"UnitGroup":      reflect.ValueOf((*script.UnitGroup)(nil)),
		"VM":             reflect.ValueOf((*script.VM)(nil)),
		"VMRuntime":      reflect.ValueOf((*script.VMRuntime)(nil)),
		"Wall":           reflect.ValueOf((*script.Wall)(nil)),
		"WallGroup":      reflect.ValueOf((*script.WallGroup)(nil)),
		"Waypoint":       reflect.ValueOf((*script.Waypoint)(nil)),
		"WaypointGroup":  reflect.ValueOf((*script.WaypointGroup)(nil)),
		"ZPositioner":    reflect.ValueOf((*script.ZPositioner)(nil)),

		// interface wrapper definitions
		"_Breakable":      reflect.ValueOf((*_github_com_opennox_libs_script_Breakable)(nil)),
		"_Chatty":         reflect.ValueOf((*_github_com_opennox_libs_script_Chatty)(nil)),
		"_Deleter":        reflect.ValueOf((*_github_com_opennox_libs_script_Deleter)(nil)),
		"_Destroyable":    reflect.ValueOf((*_github_com_opennox_libs_script_Destroyable)(nil)),
		"_EnableSetter":   reflect.ValueOf((*_github_com_opennox_libs_script_EnableSetter)(nil)),
		"_Enabler":        reflect.ValueOf((*_github_com_opennox_libs_script_Enabler)(nil)),
		"_Game":           reflect.ValueOf((*_github_com_opennox_libs_script_Game)(nil)),
		"_GridPositioner": reflect.ValueOf((*_github_com_opennox_libs_script_GridPositioner)(nil)),
		"_Identifiable":   reflect.ValueOf((*_github_com_opennox_libs_script_Identifiable)(nil)),
		"_Inventory":      reflect.ValueOf((*_github_com_opennox_libs_script_Inventory)(nil)),
		"_Item":           reflect.ValueOf((*_github_com_opennox_libs_script_Item)(nil)),
		"_ItemType":       reflect.ValueOf((*_github_com_opennox_libs_script_ItemType)(nil)),
		"_Living":         reflect.ValueOf((*_github_com_opennox_libs_script_Living)(nil)),
		"_Lockable":       reflect.ValueOf((*_github_com_opennox_libs_script_Lockable)(nil)),
		"_LockableObject": reflect.ValueOf((*_github_com_opennox_libs_script_LockableObject)(nil)),
		"_Mobile":         reflect.ValueOf((*_github_com_opennox_libs_script_Mobile)(nil)),
		"_Named":          reflect.ValueOf((*_github_com_opennox_libs_script_Named)(nil)),
		"_Object":         reflect.ValueOf((*_github_com_opennox_libs_script_Object)(nil)),
		"_ObjectType":     reflect.ValueOf((*_github_com_opennox_libs_script_ObjectType)(nil)),
		"_ObjectWrapper":  reflect.ValueOf((*_github_com_opennox_libs_script_ObjectWrapper)(nil)),
		"_Offensive":      reflect.ValueOf((*_github_com_opennox_libs_script_Offensive)(nil)),
		"_OffensiveGroup": reflect.ValueOf((*_github_com_opennox_libs_script_OffensiveGroup)(nil)),
		"_Ownable":        reflect.ValueOf((*_github_com_opennox_libs_script_Ownable)(nil)),
		"_Owned":          reflect.ValueOf((*_github_com_opennox_libs_script_Owned)(nil)),
		"_OwnerSetter":    reflect.ValueOf((*_github_com_opennox_libs_script_OwnerSetter)(nil)),
		"_Physical":       reflect.ValueOf((*_github_com_opennox_libs_script_Physical)(nil)),
		"_Player":         reflect.ValueOf((*_github_com_opennox_libs_script_Player)(nil)),
		"_PositionSetter": reflect.ValueOf((*_github_com_opennox_libs_script_PositionSetter)(nil)),
		"_Positionable":   reflect.ValueOf((*_github_com_opennox_libs_script_Positionable)(nil)),
		"_Positioner":     reflect.ValueOf((*_github_com_opennox_libs_script_Positioner)(nil)),
		"_Printer":        reflect.ValueOf((*_github_com_opennox_libs_script_Printer)(nil)),
		"_Pushable":       reflect.ValueOf((*_github_com_opennox_libs_script_Pushable)(nil)),
		"_Raisable":       reflect.ValueOf((*_github_com_opennox_libs_script_Raisable)(nil)),
		"_TimeSource":     reflect.ValueOf((*_github_com_opennox_libs_script_TimeSource)(nil)),
		"_Toggler":        reflect.ValueOf((*_github_com_opennox_libs_script_Toggler)(nil)),
		"_Trigger":        reflect.ValueOf((*_github_com_opennox_libs_script_Trigger)(nil)),
		"_Unit":           reflect.ValueOf((*_github_com_opennox_libs_script_Unit)(nil)),
		"_VM":             reflect.ValueOf((*_github_com_opennox_libs_script_VM)(nil)),
		"_Wall":           reflect.ValueOf((*_github_com_opennox_libs_script_Wall)(nil)),
		"_Waypoint":       reflect.ValueOf((*_github_com_opennox_libs_script_Waypoint)(nil)),
		"_ZPositioner":    reflect.ValueOf((*_github_com_opennox_libs_script_ZPositioner)(nil)),
	}
}

// _github_com_opennox_libs_script_Breakable is an interface wrapper for Breakable type
type _github_com_opennox_libs_script_Breakable struct {
	IValue        interface{}
	WDestroy      func()
	WHealth       func() (cur int, max int)
	WSetHealth    func(v int)
	WSetMaxHealth func(v int)
}

func (W _github_com_opennox_libs_script_Breakable) Destroy() {
	W.WDestroy()
}
func (W _github_com_opennox_libs_script_Breakable) Health() (cur int, max int) {
	return W.WHealth()
}
func (W _github_com_opennox_libs_script_Breakable) SetHealth(v int) {
	W.WSetHealth(v)
}
func (W _github_com_opennox_libs_script_Breakable) SetMaxHealth(v int) {
	W.WSetMaxHealth(v)
}

// _github_com_opennox_libs_script_Chatty is an interface wrapper for Chatty type
type _github_com_opennox_libs_script_Chatty struct {
	IValue interface{}
	WMute  func()
	WSay   func(text string, dur ns.Duration)
}

func (W _github_com_opennox_libs_script_Chatty) Mute() {
	W.WMute()
}
func (W _github_com_opennox_libs_script_Chatty) Say(text string, dur ns.Duration) {
	W.WSay(text, dur)
}

// _github_com_opennox_libs_script_Deleter is an interface wrapper for Deleter type
type _github_com_opennox_libs_script_Deleter struct {
	IValue  interface{}
	WDelete func()
}

func (W _github_com_opennox_libs_script_Deleter) Delete() {
	W.WDelete()
}

// _github_com_opennox_libs_script_Destroyable is an interface wrapper for Destroyable type
type _github_com_opennox_libs_script_Destroyable struct {
	IValue   interface{}
	WDestroy func()
}

func (W _github_com_opennox_libs_script_Destroyable) Destroy() {
	W.WDestroy()
}

// _github_com_opennox_libs_script_EnableSetter is an interface wrapper for EnableSetter type
type _github_com_opennox_libs_script_EnableSetter struct {
	IValue  interface{}
	WEnable func(enable bool)
}

func (W _github_com_opennox_libs_script_EnableSetter) Enable(enable bool) {
	W.WEnable(enable)
}

// _github_com_opennox_libs_script_Enabler is an interface wrapper for Enabler type
type _github_com_opennox_libs_script_Enabler struct {
	IValue     interface{}
	WEnable    func(enable bool)
	WIsEnabled func() bool
}

func (W _github_com_opennox_libs_script_Enabler) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_opennox_libs_script_Enabler) IsEnabled() bool {
	return W.WIsEnabled()
}

// _github_com_opennox_libs_script_Game is an interface wrapper for Game type
type _github_com_opennox_libs_script_Game struct {
	IValue             interface{}
	WAudioEffect       func(name string, pos script.Positioner)
	WBlindPlayers      func(blind bool)
	WCinemaPlayers     func(v bool)
	WConsole           func(error bool) script.Printer
	WFrame             func() int
	WGlobal            func() script.Printer
	WHostPlayer        func() script.Player
	WObjectByID        func(id string) script.Object
	WObjectGroupByID   func(id string) *script.ObjectGroup
	WObjectTypeByID    func(id string) script.ObjectType
	WOnPlayerJoin      func(fnc func(p script.Player))
	WOnPlayerLeave     func(fnc func(p script.Player))
	WPlayers           func() []script.Player
	WTime              func() time.Duration
	WWallAt            func(pos types.Pointf) script.Wall
	WWallAtGrid        func(pos image.Point) script.Wall
	WWallGroupByID     func(id string) *script.WallGroup
	WWallNear          func(pos types.Pointf) script.Wall
	WWaypointByID      func(id string) script.Waypoint
	WWaypointGroupByID func(id string) *script.WaypointGroup
}

func (W _github_com_opennox_libs_script_Game) AudioEffect(name string, pos script.Positioner) {
	W.WAudioEffect(name, pos)
}
func (W _github_com_opennox_libs_script_Game) BlindPlayers(blind bool) {
	W.WBlindPlayers(blind)
}
func (W _github_com_opennox_libs_script_Game) CinemaPlayers(v bool) {
	W.WCinemaPlayers(v)
}
func (W _github_com_opennox_libs_script_Game) Console(error bool) script.Printer {
	return W.WConsole(error)
}
func (W _github_com_opennox_libs_script_Game) Frame() int {
	return W.WFrame()
}
func (W _github_com_opennox_libs_script_Game) Global() script.Printer {
	return W.WGlobal()
}
func (W _github_com_opennox_libs_script_Game) HostPlayer() script.Player {
	return W.WHostPlayer()
}
func (W _github_com_opennox_libs_script_Game) ObjectByID(id string) script.Object {
	return W.WObjectByID(id)
}
func (W _github_com_opennox_libs_script_Game) ObjectGroupByID(id string) *script.ObjectGroup {
	return W.WObjectGroupByID(id)
}
func (W _github_com_opennox_libs_script_Game) ObjectTypeByID(id string) script.ObjectType {
	return W.WObjectTypeByID(id)
}
func (W _github_com_opennox_libs_script_Game) OnPlayerJoin(fnc func(p script.Player)) {
	W.WOnPlayerJoin(fnc)
}
func (W _github_com_opennox_libs_script_Game) OnPlayerLeave(fnc func(p script.Player)) {
	W.WOnPlayerLeave(fnc)
}
func (W _github_com_opennox_libs_script_Game) Players() []script.Player {
	return W.WPlayers()
}
func (W _github_com_opennox_libs_script_Game) Time() time.Duration {
	return W.WTime()
}
func (W _github_com_opennox_libs_script_Game) WallAt(pos types.Pointf) script.Wall {
	return W.WWallAt(pos)
}
func (W _github_com_opennox_libs_script_Game) WallAtGrid(pos image.Point) script.Wall {
	return W.WWallAtGrid(pos)
}
func (W _github_com_opennox_libs_script_Game) WallGroupByID(id string) *script.WallGroup {
	return W.WWallGroupByID(id)
}
func (W _github_com_opennox_libs_script_Game) WallNear(pos types.Pointf) script.Wall {
	return W.WWallNear(pos)
}
func (W _github_com_opennox_libs_script_Game) WaypointByID(id string) script.Waypoint {
	return W.WWaypointByID(id)
}
func (W _github_com_opennox_libs_script_Game) WaypointGroupByID(id string) *script.WaypointGroup {
	return W.WWaypointGroupByID(id)
}

// _github_com_opennox_libs_script_GridPositioner is an interface wrapper for GridPositioner type
type _github_com_opennox_libs_script_GridPositioner struct {
	IValue   interface{}
	WGridPos func() image.Point
}

func (W _github_com_opennox_libs_script_GridPositioner) GridPos() image.Point {
	return W.WGridPos()
}

// _github_com_opennox_libs_script_Identifiable is an interface wrapper for Identifiable type
type _github_com_opennox_libs_script_Identifiable struct {
	IValue  interface{}
	WID     func() string
	WString func() string
}

func (W _github_com_opennox_libs_script_Identifiable) ID() string {
	return W.WID()
}
func (W _github_com_opennox_libs_script_Identifiable) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_Inventory is an interface wrapper for Inventory type
type _github_com_opennox_libs_script_Inventory struct {
	IValue     interface{}
	WCountItem func(v script.Item) int
	WGold      func() int
	WItems     func() []script.Item
	WSetGold   func(v int)
}

func (W _github_com_opennox_libs_script_Inventory) CountItem(v script.Item) int {
	return W.WCountItem(v)
}
func (W _github_com_opennox_libs_script_Inventory) Gold() int {
	return W.WGold()
}
func (W _github_com_opennox_libs_script_Inventory) Items() []script.Item {
	return W.WItems()
}
func (W _github_com_opennox_libs_script_Inventory) SetGold(v int) {
	W.WSetGold(v)
}

// _github_com_opennox_libs_script_Item is an interface wrapper for Item type
type _github_com_opennox_libs_script_Item struct {
	IValue     interface{}
	WAmount    func() int
	WCanStack  func(v script.Item) bool
	WItemType  func() script.ItemType
	WName      func() string
	WSetAmount func(v int)
	WString    func() string
}

func (W _github_com_opennox_libs_script_Item) Amount() int {
	return W.WAmount()
}
func (W _github_com_opennox_libs_script_Item) CanStack(v script.Item) bool {
	return W.WCanStack(v)
}
func (W _github_com_opennox_libs_script_Item) ItemType() script.ItemType {
	return W.WItemType()
}
func (W _github_com_opennox_libs_script_Item) Name() string {
	return W.WName()
}
func (W _github_com_opennox_libs_script_Item) SetAmount(v int) {
	W.WSetAmount(v)
}
func (W _github_com_opennox_libs_script_Item) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_ItemType is an interface wrapper for ItemType type
type _github_com_opennox_libs_script_ItemType struct {
	IValue    interface{}
	WMaxStack func() int
	WName     func() string
	WString   func() string
}

func (W _github_com_opennox_libs_script_ItemType) MaxStack() int {
	return W.WMaxStack()
}
func (W _github_com_opennox_libs_script_ItemType) Name() string {
	return W.WName()
}
func (W _github_com_opennox_libs_script_ItemType) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_Living is an interface wrapper for Living type
type _github_com_opennox_libs_script_Living struct {
	IValue        interface{}
	WDestroy      func()
	WHealth       func() (cur int, max int)
	WMana         func() (cur int, max int)
	WSetHealth    func(v int)
	WSetMana      func(v int)
	WSetMaxHealth func(v int)
	WSetMaxMana   func(v int)
}

func (W _github_com_opennox_libs_script_Living) Destroy() {
	W.WDestroy()
}
func (W _github_com_opennox_libs_script_Living) Health() (cur int, max int) {
	return W.WHealth()
}
func (W _github_com_opennox_libs_script_Living) Mana() (cur int, max int) {
	return W.WMana()
}
func (W _github_com_opennox_libs_script_Living) SetHealth(v int) {
	W.WSetHealth(v)
}
func (W _github_com_opennox_libs_script_Living) SetMana(v int) {
	W.WSetMana(v)
}
func (W _github_com_opennox_libs_script_Living) SetMaxHealth(v int) {
	W.WSetMaxHealth(v)
}
func (W _github_com_opennox_libs_script_Living) SetMaxMana(v int) {
	W.WSetMaxMana(v)
}

// _github_com_opennox_libs_script_Lockable is an interface wrapper for Lockable type
type _github_com_opennox_libs_script_Lockable struct {
	IValue    interface{}
	WIsLocked func() bool
	WLock     func(lock bool)
}

func (W _github_com_opennox_libs_script_Lockable) IsLocked() bool {
	return W.WIsLocked()
}
func (W _github_com_opennox_libs_script_Lockable) Lock(lock bool) {
	W.WLock(lock)
}

// _github_com_opennox_libs_script_LockableObject is an interface wrapper for LockableObject type
type _github_com_opennox_libs_script_LockableObject struct {
	IValue               interface{}
	WClass               func() object.Class
	WDelete              func()
	WDestroy             func()
	WEnable              func(enable bool)
	WGetObject           func() script.Object
	WID                  func() string
	WIsEnabled           func() bool
	WIsLocked            func() bool
	WLock                func(lock bool)
	WObjScriptID         func() int
	WObjectType          func() script.ObjectType
	WOnTriggerActivate   func(fnc func(obj script.Object))
	WOnTriggerDeactivate func(fnc func())
	WOwner               func() script.Object
	WPos                 func() types.Pointf
	WPush                func(vec types.Pointf, force float32)
	WPushTo              func(p types.Pointf)
	WScriptID            func() int
	WSetOwner            func(owner script.ObjectWrapper)
	WSetPos              func(p types.Pointf)
	WSetZ                func(z float32)
	WString              func() string
	WZ                   func() float32
}

func (W _github_com_opennox_libs_script_LockableObject) Class() object.Class {
	return W.WClass()
}
func (W _github_com_opennox_libs_script_LockableObject) Delete() {
	W.WDelete()
}
func (W _github_com_opennox_libs_script_LockableObject) Destroy() {
	W.WDestroy()
}
func (W _github_com_opennox_libs_script_LockableObject) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_opennox_libs_script_LockableObject) GetObject() script.Object {
	return W.WGetObject()
}
func (W _github_com_opennox_libs_script_LockableObject) ID() string {
	return W.WID()
}
func (W _github_com_opennox_libs_script_LockableObject) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_opennox_libs_script_LockableObject) IsLocked() bool {
	return W.WIsLocked()
}
func (W _github_com_opennox_libs_script_LockableObject) Lock(lock bool) {
	W.WLock(lock)
}
func (W _github_com_opennox_libs_script_LockableObject) ObjScriptID() int {
	return W.WObjScriptID()
}
func (W _github_com_opennox_libs_script_LockableObject) ObjectType() script.ObjectType {
	return W.WObjectType()
}
func (W _github_com_opennox_libs_script_LockableObject) OnTriggerActivate(fnc func(obj script.Object)) {
	W.WOnTriggerActivate(fnc)
}
func (W _github_com_opennox_libs_script_LockableObject) OnTriggerDeactivate(fnc func()) {
	W.WOnTriggerDeactivate(fnc)
}
func (W _github_com_opennox_libs_script_LockableObject) Owner() script.Object {
	return W.WOwner()
}
func (W _github_com_opennox_libs_script_LockableObject) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_LockableObject) Push(vec types.Pointf, force float32) {
	W.WPush(vec, force)
}
func (W _github_com_opennox_libs_script_LockableObject) PushTo(p types.Pointf) {
	W.WPushTo(p)
}
func (W _github_com_opennox_libs_script_LockableObject) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_opennox_libs_script_LockableObject) SetOwner(owner script.ObjectWrapper) {
	W.WSetOwner(owner)
}
func (W _github_com_opennox_libs_script_LockableObject) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_LockableObject) SetZ(z float32) {
	W.WSetZ(z)
}
func (W _github_com_opennox_libs_script_LockableObject) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _github_com_opennox_libs_script_LockableObject) Z() float32 {
	return W.WZ()
}

// _github_com_opennox_libs_script_Mobile is an interface wrapper for Mobile type
type _github_com_opennox_libs_script_Mobile struct {
	IValue     interface{}
	WFlee      func(obj script.Positioner, dur ns.Duration)
	WFollow    func(obj script.Positioner)
	WFreeze    func(freeze bool)
	WIdle      func()
	WLookAngle func(ang int)
	WLookAt    func(p types.Pointf)
	WLookAtDir func(dir int)
	WMoveTo    func(p types.Pointf)
	WReturn    func()
	WWalkTo    func(p types.Pointf)
	WWander    func()
}

func (W _github_com_opennox_libs_script_Mobile) Flee(obj script.Positioner, dur ns.Duration) {
	W.WFlee(obj, dur)
}
func (W _github_com_opennox_libs_script_Mobile) Follow(obj script.Positioner) {
	W.WFollow(obj)
}
func (W _github_com_opennox_libs_script_Mobile) Freeze(freeze bool) {
	W.WFreeze(freeze)
}
func (W _github_com_opennox_libs_script_Mobile) Idle() {
	W.WIdle()
}
func (W _github_com_opennox_libs_script_Mobile) LookAngle(ang int) {
	W.WLookAngle(ang)
}
func (W _github_com_opennox_libs_script_Mobile) LookAt(p types.Pointf) {
	W.WLookAt(p)
}
func (W _github_com_opennox_libs_script_Mobile) LookAtDir(dir int) {
	W.WLookAtDir(dir)
}
func (W _github_com_opennox_libs_script_Mobile) MoveTo(p types.Pointf) {
	W.WMoveTo(p)
}
func (W _github_com_opennox_libs_script_Mobile) Return() {
	W.WReturn()
}
func (W _github_com_opennox_libs_script_Mobile) WalkTo(p types.Pointf) {
	W.WWalkTo(p)
}
func (W _github_com_opennox_libs_script_Mobile) Wander() {
	W.WWander()
}

// _github_com_opennox_libs_script_Named is an interface wrapper for Named type
type _github_com_opennox_libs_script_Named struct {
	IValue  interface{}
	WName   func() string
	WString func() string
}

func (W _github_com_opennox_libs_script_Named) Name() string {
	return W.WName()
}
func (W _github_com_opennox_libs_script_Named) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_Object is an interface wrapper for Object type
type _github_com_opennox_libs_script_Object struct {
	IValue               interface{}
	WClass               func() object.Class
	WDelete              func()
	WDestroy             func()
	WEnable              func(enable bool)
	WGetObject           func() script.Object
	WID                  func() string
	WIsEnabled           func() bool
	WObjScriptID         func() int
	WObjectType          func() script.ObjectType
	WOnTriggerActivate   func(fnc func(obj script.Object))
	WOnTriggerDeactivate func(fnc func())
	WOwner               func() script.Object
	WPos                 func() types.Pointf
	WPush                func(vec types.Pointf, force float32)
	WPushTo              func(p types.Pointf)
	WScriptID            func() int
	WSetOwner            func(owner script.ObjectWrapper)
	WSetPos              func(p types.Pointf)
	WSetZ                func(z float32)
	WString              func() string
	WZ                   func() float32
}

func (W _github_com_opennox_libs_script_Object) Class() object.Class {
	return W.WClass()
}
func (W _github_com_opennox_libs_script_Object) Delete() {
	W.WDelete()
}
func (W _github_com_opennox_libs_script_Object) Destroy() {
	W.WDestroy()
}
func (W _github_com_opennox_libs_script_Object) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_opennox_libs_script_Object) GetObject() script.Object {
	return W.WGetObject()
}
func (W _github_com_opennox_libs_script_Object) ID() string {
	return W.WID()
}
func (W _github_com_opennox_libs_script_Object) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_opennox_libs_script_Object) ObjScriptID() int {
	return W.WObjScriptID()
}
func (W _github_com_opennox_libs_script_Object) ObjectType() script.ObjectType {
	return W.WObjectType()
}
func (W _github_com_opennox_libs_script_Object) OnTriggerActivate(fnc func(obj script.Object)) {
	W.WOnTriggerActivate(fnc)
}
func (W _github_com_opennox_libs_script_Object) OnTriggerDeactivate(fnc func()) {
	W.WOnTriggerDeactivate(fnc)
}
func (W _github_com_opennox_libs_script_Object) Owner() script.Object {
	return W.WOwner()
}
func (W _github_com_opennox_libs_script_Object) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Object) Push(vec types.Pointf, force float32) {
	W.WPush(vec, force)
}
func (W _github_com_opennox_libs_script_Object) PushTo(p types.Pointf) {
	W.WPushTo(p)
}
func (W _github_com_opennox_libs_script_Object) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_opennox_libs_script_Object) SetOwner(owner script.ObjectWrapper) {
	W.WSetOwner(owner)
}
func (W _github_com_opennox_libs_script_Object) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_Object) SetZ(z float32) {
	W.WSetZ(z)
}
func (W _github_com_opennox_libs_script_Object) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _github_com_opennox_libs_script_Object) Z() float32 {
	return W.WZ()
}

// _github_com_opennox_libs_script_ObjectType is an interface wrapper for ObjectType type
type _github_com_opennox_libs_script_ObjectType struct {
	IValue        interface{}
	WCreateObject func(p types.Pointf) script.Object
	WID           func() string
	WString       func() string
}

func (W _github_com_opennox_libs_script_ObjectType) CreateObject(p types.Pointf) script.Object {
	return W.WCreateObject(p)
}
func (W _github_com_opennox_libs_script_ObjectType) ID() string {
	return W.WID()
}
func (W _github_com_opennox_libs_script_ObjectType) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_ObjectWrapper is an interface wrapper for ObjectWrapper type
type _github_com_opennox_libs_script_ObjectWrapper struct {
	IValue     interface{}
	WGetObject func() script.Object
}

func (W _github_com_opennox_libs_script_ObjectWrapper) GetObject() script.Object {
	return W.WGetObject()
}

// _github_com_opennox_libs_script_Offensive is an interface wrapper for Offensive type
type _github_com_opennox_libs_script_Offensive struct {
	IValue           interface{}
	WAggression      func() float32
	WAttack          func(obj script.Positioner)
	WCast            func(spell spell.ID, level int, target script.Positioner) bool
	WGuard           func()
	WHitMelee        func(p types.Pointf)
	WHitRanged       func(p types.Pointf)
	WHunt            func()
	WRegroupLevel    func() float32
	WRetreatLevel    func() float32
	WSetAggression   func(v float32)
	WSetRegroupLevel func(v float32)
	WSetRetreatLevel func(v float32)
}

func (W _github_com_opennox_libs_script_Offensive) Aggression() float32 {
	return W.WAggression()
}
func (W _github_com_opennox_libs_script_Offensive) Attack(obj script.Positioner) {
	W.WAttack(obj)
}
func (W _github_com_opennox_libs_script_Offensive) Cast(spell spell.ID, level int, target script.Positioner) bool {
	return W.WCast(spell, level, target)
}
func (W _github_com_opennox_libs_script_Offensive) Guard() {
	W.WGuard()
}
func (W _github_com_opennox_libs_script_Offensive) HitMelee(p types.Pointf) {
	W.WHitMelee(p)
}
func (W _github_com_opennox_libs_script_Offensive) HitRanged(p types.Pointf) {
	W.WHitRanged(p)
}
func (W _github_com_opennox_libs_script_Offensive) Hunt() {
	W.WHunt()
}
func (W _github_com_opennox_libs_script_Offensive) RegroupLevel() float32 {
	return W.WRegroupLevel()
}
func (W _github_com_opennox_libs_script_Offensive) RetreatLevel() float32 {
	return W.WRetreatLevel()
}
func (W _github_com_opennox_libs_script_Offensive) SetAggression(v float32) {
	W.WSetAggression(v)
}
func (W _github_com_opennox_libs_script_Offensive) SetRegroupLevel(v float32) {
	W.WSetRegroupLevel(v)
}
func (W _github_com_opennox_libs_script_Offensive) SetRetreatLevel(v float32) {
	W.WSetRetreatLevel(v)
}

// _github_com_opennox_libs_script_OffensiveGroup is an interface wrapper for OffensiveGroup type
type _github_com_opennox_libs_script_OffensiveGroup struct {
	IValue           interface{}
	WAttack          func(obj script.Positioner)
	WCast            func(spell spell.ID, level int, target script.Positioner) bool
	WGuard           func()
	WHitMelee        func(p types.Pointf)
	WHitRanged       func(p types.Pointf)
	WHunt            func()
	WSetAggression   func(v float32)
	WSetRegroupLevel func(v float32)
	WSetRetreatLevel func(v float32)
}

func (W _github_com_opennox_libs_script_OffensiveGroup) Attack(obj script.Positioner) {
	W.WAttack(obj)
}
func (W _github_com_opennox_libs_script_OffensiveGroup) Cast(spell spell.ID, level int, target script.Positioner) bool {
	return W.WCast(spell, level, target)
}
func (W _github_com_opennox_libs_script_OffensiveGroup) Guard() {
	W.WGuard()
}
func (W _github_com_opennox_libs_script_OffensiveGroup) HitMelee(p types.Pointf) {
	W.WHitMelee(p)
}
func (W _github_com_opennox_libs_script_OffensiveGroup) HitRanged(p types.Pointf) {
	W.WHitRanged(p)
}
func (W _github_com_opennox_libs_script_OffensiveGroup) Hunt() {
	W.WHunt()
}
func (W _github_com_opennox_libs_script_OffensiveGroup) SetAggression(v float32) {
	W.WSetAggression(v)
}
func (W _github_com_opennox_libs_script_OffensiveGroup) SetRegroupLevel(v float32) {
	W.WSetRegroupLevel(v)
}
func (W _github_com_opennox_libs_script_OffensiveGroup) SetRetreatLevel(v float32) {
	W.WSetRetreatLevel(v)
}

// _github_com_opennox_libs_script_Ownable is an interface wrapper for Ownable type
type _github_com_opennox_libs_script_Ownable struct {
	IValue    interface{}
	WOwner    func() script.Object
	WSetOwner func(owner script.ObjectWrapper)
}

func (W _github_com_opennox_libs_script_Ownable) Owner() script.Object {
	return W.WOwner()
}
func (W _github_com_opennox_libs_script_Ownable) SetOwner(owner script.ObjectWrapper) {
	W.WSetOwner(owner)
}

// _github_com_opennox_libs_script_Owned is an interface wrapper for Owned type
type _github_com_opennox_libs_script_Owned struct {
	IValue interface{}
	WOwner func() script.Object
}

func (W _github_com_opennox_libs_script_Owned) Owner() script.Object {
	return W.WOwner()
}

// _github_com_opennox_libs_script_OwnerSetter is an interface wrapper for OwnerSetter type
type _github_com_opennox_libs_script_OwnerSetter struct {
	IValue    interface{}
	WSetOwner func(owner script.ObjectWrapper)
}

func (W _github_com_opennox_libs_script_OwnerSetter) SetOwner(owner script.ObjectWrapper) {
	W.WSetOwner(owner)
}

// _github_com_opennox_libs_script_Physical is an interface wrapper for Physical type
type _github_com_opennox_libs_script_Physical struct {
	IValue  interface{}
	WPos    func() types.Pointf
	WPush   func(vec types.Pointf, force float32)
	WPushTo func(p types.Pointf)
	WSetPos func(p types.Pointf)
	WSetZ   func(z float32)
	WZ      func() float32
}

func (W _github_com_opennox_libs_script_Physical) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Physical) Push(vec types.Pointf, force float32) {
	W.WPush(vec, force)
}
func (W _github_com_opennox_libs_script_Physical) PushTo(p types.Pointf) {
	W.WPushTo(p)
}
func (W _github_com_opennox_libs_script_Physical) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_Physical) SetZ(z float32) {
	W.WSetZ(z)
}
func (W _github_com_opennox_libs_script_Physical) Z() float32 {
	return W.WZ()
}

// _github_com_opennox_libs_script_Player is an interface wrapper for Player type
type _github_com_opennox_libs_script_Player struct {
	IValue     interface{}
	WBlind     func(v bool)
	WCinema    func(v bool)
	WGetObject func() script.Object
	WIsHost    func() bool
	WName      func() string
	WPos       func() types.Pointf
	WPrint     func(text string)
	WSetPos    func(p types.Pointf)
	WString    func() string
	WUnit      func() script.Unit
}

func (W _github_com_opennox_libs_script_Player) Blind(v bool) {
	W.WBlind(v)
}
func (W _github_com_opennox_libs_script_Player) Cinema(v bool) {
	W.WCinema(v)
}
func (W _github_com_opennox_libs_script_Player) GetObject() script.Object {
	return W.WGetObject()
}
func (W _github_com_opennox_libs_script_Player) IsHost() bool {
	return W.WIsHost()
}
func (W _github_com_opennox_libs_script_Player) Name() string {
	return W.WName()
}
func (W _github_com_opennox_libs_script_Player) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Player) Print(text string) {
	W.WPrint(text)
}
func (W _github_com_opennox_libs_script_Player) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_Player) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _github_com_opennox_libs_script_Player) Unit() script.Unit {
	return W.WUnit()
}

// _github_com_opennox_libs_script_PositionSetter is an interface wrapper for PositionSetter type
type _github_com_opennox_libs_script_PositionSetter struct {
	IValue  interface{}
	WSetPos func(p types.Pointf)
}

func (W _github_com_opennox_libs_script_PositionSetter) SetPos(p types.Pointf) {
	W.WSetPos(p)
}

// _github_com_opennox_libs_script_Positionable is an interface wrapper for Positionable type
type _github_com_opennox_libs_script_Positionable struct {
	IValue  interface{}
	WPos    func() types.Pointf
	WSetPos func(p types.Pointf)
}

func (W _github_com_opennox_libs_script_Positionable) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Positionable) SetPos(p types.Pointf) {
	W.WSetPos(p)
}

// _github_com_opennox_libs_script_Positioner is an interface wrapper for Positioner type
type _github_com_opennox_libs_script_Positioner struct {
	IValue interface{}
	WPos   func() types.Pointf
}

func (W _github_com_opennox_libs_script_Positioner) Pos() types.Pointf {
	return W.WPos()
}

// _github_com_opennox_libs_script_Printer is an interface wrapper for Printer type
type _github_com_opennox_libs_script_Printer struct {
	IValue interface{}
	WPrint func(text string)
}

func (W _github_com_opennox_libs_script_Printer) Print(text string) {
	W.WPrint(text)
}

// _github_com_opennox_libs_script_Pushable is an interface wrapper for Pushable type
type _github_com_opennox_libs_script_Pushable struct {
	IValue  interface{}
	WPush   func(vec types.Pointf, force float32)
	WPushTo func(p types.Pointf)
}

func (W _github_com_opennox_libs_script_Pushable) Push(vec types.Pointf, force float32) {
	W.WPush(vec, force)
}
func (W _github_com_opennox_libs_script_Pushable) PushTo(p types.Pointf) {
	W.WPushTo(p)
}

// _github_com_opennox_libs_script_Raisable is an interface wrapper for Raisable type
type _github_com_opennox_libs_script_Raisable struct {
	IValue  interface{}
	WPos    func() types.Pointf
	WSetPos func(p types.Pointf)
	WSetZ   func(z float32)
	WZ      func() float32
}

func (W _github_com_opennox_libs_script_Raisable) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Raisable) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_Raisable) SetZ(z float32) {
	W.WSetZ(z)
}
func (W _github_com_opennox_libs_script_Raisable) Z() float32 {
	return W.WZ()
}

// _github_com_opennox_libs_script_TimeSource is an interface wrapper for TimeSource type
type _github_com_opennox_libs_script_TimeSource struct {
	IValue interface{}
	WFrame func() int
	WTime  func() time.Duration
}

func (W _github_com_opennox_libs_script_TimeSource) Frame() int {
	return W.WFrame()
}
func (W _github_com_opennox_libs_script_TimeSource) Time() time.Duration {
	return W.WTime()
}

// _github_com_opennox_libs_script_Toggler is an interface wrapper for Toggler type
type _github_com_opennox_libs_script_Toggler struct {
	IValue  interface{}
	WToggle func() bool
}

func (W _github_com_opennox_libs_script_Toggler) Toggle() bool {
	return W.WToggle()
}

// _github_com_opennox_libs_script_Trigger is an interface wrapper for Trigger type
type _github_com_opennox_libs_script_Trigger struct {
	IValue               interface{}
	WOnTriggerActivate   func(fnc func(obj script.Object))
	WOnTriggerDeactivate func(fnc func())
}

func (W _github_com_opennox_libs_script_Trigger) OnTriggerActivate(fnc func(obj script.Object)) {
	W.WOnTriggerActivate(fnc)
}
func (W _github_com_opennox_libs_script_Trigger) OnTriggerDeactivate(fnc func()) {
	W.WOnTriggerDeactivate(fnc)
}

// _github_com_opennox_libs_script_Unit is an interface wrapper for Unit type
type _github_com_opennox_libs_script_Unit struct {
	IValue               interface{}
	WAggression          func() float32
	WAttack              func(obj script.Positioner)
	WCanSee              func(obj script.Object) bool
	WCast                func(spell spell.ID, level int, target script.Positioner) bool
	WClass               func() object.Class
	WDelete              func()
	WDestroy             func()
	WEnable              func(enable bool)
	WFlee                func(obj script.Positioner, dur ns.Duration)
	WFollow              func(obj script.Positioner)
	WFreeze              func(freeze bool)
	WGetObject           func() script.Object
	WGuard               func()
	WHealth              func() (cur int, max int)
	WHitMelee            func(p types.Pointf)
	WHitRanged           func(p types.Pointf)
	WHunt                func()
	WID                  func() string
	WIdle                func()
	WIsEnabled           func() bool
	WLookAngle           func(ang int)
	WLookAt              func(p types.Pointf)
	WLookAtDir           func(dir int)
	WMana                func() (cur int, max int)
	WMoveTo              func(p types.Pointf)
	WMute                func()
	WObjScriptID         func() int
	WObjectType          func() script.ObjectType
	WOnTriggerActivate   func(fnc func(obj script.Object))
	WOnTriggerDeactivate func(fnc func())
	WOnUnitAttack        func(fnc func(targ script.Unit))
	WOnUnitDeath         func(fnc func())
	WOnUnitDone          func(fnc func())
	WOnUnitIdle          func(fnc func())
	WOnUnitLostEnemy     func(fnc func(targ script.Unit))
	WOnUnitSeeEnemy      func(fnc func(targ script.Unit))
	WOwner               func() script.Object
	WPos                 func() types.Pointf
	WPush                func(vec types.Pointf, force float32)
	WPushTo              func(p types.Pointf)
	WRegroupLevel        func() float32
	WRetreatLevel        func() float32
	WReturn              func()
	WSay                 func(text string, dur ns.Duration)
	WScriptID            func() int
	WSetAggression       func(v float32)
	WSetHealth           func(v int)
	WSetMana             func(v int)
	WSetMaxHealth        func(v int)
	WSetMaxMana          func(v int)
	WSetOwner            func(owner script.ObjectWrapper)
	WSetPos              func(p types.Pointf)
	WSetRegroupLevel     func(v float32)
	WSetRetreatLevel     func(v float32)
	WSetZ                func(z float32)
	WString              func() string
	WWalkTo              func(p types.Pointf)
	WWander              func()
	WZ                   func() float32
}

func (W _github_com_opennox_libs_script_Unit) Aggression() float32 {
	return W.WAggression()
}
func (W _github_com_opennox_libs_script_Unit) Attack(obj script.Positioner) {
	W.WAttack(obj)
}
func (W _github_com_opennox_libs_script_Unit) CanSee(obj script.Object) bool {
	return W.WCanSee(obj)
}
func (W _github_com_opennox_libs_script_Unit) Cast(spell spell.ID, level int, target script.Positioner) bool {
	return W.WCast(spell, level, target)
}
func (W _github_com_opennox_libs_script_Unit) Class() object.Class {
	return W.WClass()
}
func (W _github_com_opennox_libs_script_Unit) Delete() {
	W.WDelete()
}
func (W _github_com_opennox_libs_script_Unit) Destroy() {
	W.WDestroy()
}
func (W _github_com_opennox_libs_script_Unit) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_opennox_libs_script_Unit) Flee(obj script.Positioner, dur ns.Duration) {
	W.WFlee(obj, dur)
}
func (W _github_com_opennox_libs_script_Unit) Follow(obj script.Positioner) {
	W.WFollow(obj)
}
func (W _github_com_opennox_libs_script_Unit) Freeze(freeze bool) {
	W.WFreeze(freeze)
}
func (W _github_com_opennox_libs_script_Unit) GetObject() script.Object {
	return W.WGetObject()
}
func (W _github_com_opennox_libs_script_Unit) Guard() {
	W.WGuard()
}
func (W _github_com_opennox_libs_script_Unit) Health() (cur int, max int) {
	return W.WHealth()
}
func (W _github_com_opennox_libs_script_Unit) HitMelee(p types.Pointf) {
	W.WHitMelee(p)
}
func (W _github_com_opennox_libs_script_Unit) HitRanged(p types.Pointf) {
	W.WHitRanged(p)
}
func (W _github_com_opennox_libs_script_Unit) Hunt() {
	W.WHunt()
}
func (W _github_com_opennox_libs_script_Unit) ID() string {
	return W.WID()
}
func (W _github_com_opennox_libs_script_Unit) Idle() {
	W.WIdle()
}
func (W _github_com_opennox_libs_script_Unit) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_opennox_libs_script_Unit) LookAngle(ang int) {
	W.WLookAngle(ang)
}
func (W _github_com_opennox_libs_script_Unit) LookAt(p types.Pointf) {
	W.WLookAt(p)
}
func (W _github_com_opennox_libs_script_Unit) LookAtDir(dir int) {
	W.WLookAtDir(dir)
}
func (W _github_com_opennox_libs_script_Unit) Mana() (cur int, max int) {
	return W.WMana()
}
func (W _github_com_opennox_libs_script_Unit) MoveTo(p types.Pointf) {
	W.WMoveTo(p)
}
func (W _github_com_opennox_libs_script_Unit) Mute() {
	W.WMute()
}
func (W _github_com_opennox_libs_script_Unit) ObjScriptID() int {
	return W.WObjScriptID()
}
func (W _github_com_opennox_libs_script_Unit) ObjectType() script.ObjectType {
	return W.WObjectType()
}
func (W _github_com_opennox_libs_script_Unit) OnTriggerActivate(fnc func(obj script.Object)) {
	W.WOnTriggerActivate(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnTriggerDeactivate(fnc func()) {
	W.WOnTriggerDeactivate(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnUnitAttack(fnc func(targ script.Unit)) {
	W.WOnUnitAttack(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnUnitDeath(fnc func()) {
	W.WOnUnitDeath(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnUnitDone(fnc func()) {
	W.WOnUnitDone(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnUnitIdle(fnc func()) {
	W.WOnUnitIdle(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnUnitLostEnemy(fnc func(targ script.Unit)) {
	W.WOnUnitLostEnemy(fnc)
}
func (W _github_com_opennox_libs_script_Unit) OnUnitSeeEnemy(fnc func(targ script.Unit)) {
	W.WOnUnitSeeEnemy(fnc)
}
func (W _github_com_opennox_libs_script_Unit) Owner() script.Object {
	return W.WOwner()
}
func (W _github_com_opennox_libs_script_Unit) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Unit) Push(vec types.Pointf, force float32) {
	W.WPush(vec, force)
}
func (W _github_com_opennox_libs_script_Unit) PushTo(p types.Pointf) {
	W.WPushTo(p)
}
func (W _github_com_opennox_libs_script_Unit) RegroupLevel() float32 {
	return W.WRegroupLevel()
}
func (W _github_com_opennox_libs_script_Unit) RetreatLevel() float32 {
	return W.WRetreatLevel()
}
func (W _github_com_opennox_libs_script_Unit) Return() {
	W.WReturn()
}
func (W _github_com_opennox_libs_script_Unit) Say(text string, dur ns.Duration) {
	W.WSay(text, dur)
}
func (W _github_com_opennox_libs_script_Unit) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_opennox_libs_script_Unit) SetAggression(v float32) {
	W.WSetAggression(v)
}
func (W _github_com_opennox_libs_script_Unit) SetHealth(v int) {
	W.WSetHealth(v)
}
func (W _github_com_opennox_libs_script_Unit) SetMana(v int) {
	W.WSetMana(v)
}
func (W _github_com_opennox_libs_script_Unit) SetMaxHealth(v int) {
	W.WSetMaxHealth(v)
}
func (W _github_com_opennox_libs_script_Unit) SetMaxMana(v int) {
	W.WSetMaxMana(v)
}
func (W _github_com_opennox_libs_script_Unit) SetOwner(owner script.ObjectWrapper) {
	W.WSetOwner(owner)
}
func (W _github_com_opennox_libs_script_Unit) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_Unit) SetRegroupLevel(v float32) {
	W.WSetRegroupLevel(v)
}
func (W _github_com_opennox_libs_script_Unit) SetRetreatLevel(v float32) {
	W.WSetRetreatLevel(v)
}
func (W _github_com_opennox_libs_script_Unit) SetZ(z float32) {
	W.WSetZ(z)
}
func (W _github_com_opennox_libs_script_Unit) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _github_com_opennox_libs_script_Unit) WalkTo(p types.Pointf) {
	W.WWalkTo(p)
}
func (W _github_com_opennox_libs_script_Unit) Wander() {
	W.WWander()
}
func (W _github_com_opennox_libs_script_Unit) Z() float32 {
	return W.WZ()
}

// _github_com_opennox_libs_script_VM is an interface wrapper for VM type
type _github_com_opennox_libs_script_VM struct {
	IValue     interface{}
	WClose     func() error
	WExec      func(s string) (reflect.Value, error)
	WExecFile  func(path string) error
	WGetSymbol func(name string, typ reflect.Type) (reflect.Value, bool, error)
	WOnEvent   func(typ script.EventType)
	WOnFrame   func()
}

func (W _github_com_opennox_libs_script_VM) Close() error {
	return W.WClose()
}
func (W _github_com_opennox_libs_script_VM) Exec(s string) (reflect.Value, error) {
	return W.WExec(s)
}
func (W _github_com_opennox_libs_script_VM) ExecFile(path string) error {
	return W.WExecFile(path)
}
func (W _github_com_opennox_libs_script_VM) GetSymbol(name string, typ reflect.Type) (reflect.Value, bool, error) {
	return W.WGetSymbol(name, typ)
}
func (W _github_com_opennox_libs_script_VM) OnEvent(typ script.EventType) {
	W.WOnEvent(typ)
}
func (W _github_com_opennox_libs_script_VM) OnFrame() {
	W.WOnFrame()
}

// _github_com_opennox_libs_script_Wall is an interface wrapper for Wall type
type _github_com_opennox_libs_script_Wall struct {
	IValue     interface{}
	WDestroy   func()
	WEnable    func(enable bool)
	WGridPos   func() image.Point
	WIsEnabled func() bool
	WPos       func() types.Pointf
	WString    func() string
}

func (W _github_com_opennox_libs_script_Wall) Destroy() {
	W.WDestroy()
}
func (W _github_com_opennox_libs_script_Wall) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_opennox_libs_script_Wall) GridPos() image.Point {
	return W.WGridPos()
}
func (W _github_com_opennox_libs_script_Wall) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_opennox_libs_script_Wall) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Wall) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_Waypoint is an interface wrapper for Waypoint type
type _github_com_opennox_libs_script_Waypoint struct {
	IValue     interface{}
	WEnable    func(enable bool)
	WID        func() string
	WIsEnabled func() bool
	WPos       func() types.Pointf
	WSetPos    func(p types.Pointf)
	WString    func() string
}

func (W _github_com_opennox_libs_script_Waypoint) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_opennox_libs_script_Waypoint) ID() string {
	return W.WID()
}
func (W _github_com_opennox_libs_script_Waypoint) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_opennox_libs_script_Waypoint) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_opennox_libs_script_Waypoint) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_opennox_libs_script_Waypoint) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}

// _github_com_opennox_libs_script_ZPositioner is an interface wrapper for ZPositioner type
type _github_com_opennox_libs_script_ZPositioner struct {
	IValue interface{}
	WZ     func() float32
}

func (W _github_com_opennox_libs_script_ZPositioner) Z() float32 {
	return W.WZ()
}
